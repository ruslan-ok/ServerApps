"""
Django settings for rusel project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

ENV = 'DEV' # 'DEV' or 'PRD'
DB  = 'L'   # 'L' - sqlite, 'M' - mysql

if ENV:
    ENV = '_' + ENV

if DB:
    DB = '_' + DB

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY' + ENV, 'default_value')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.environ.get('DJANGO_DEBUG', '0') == '1')

HOST = os.environ.get('DJANGO_HOST', 'localhost')
ALLOWED_HOSTS = [HOST]

# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'apart.apps.ApartConfig',
    'cram.apps.CramConfig',
    'docs.apps.DocsConfig',
    'expen.apps.ExpenConfig',
    'family.apps.FamilyConfig',
    'fuel.apps.FuelConfig',
    'health.apps.HealthConfig',
    'news.apps.NewsConfig',
    'note.apps.NoteConfig',
    'photo.apps.PhotoConfig',
    'store.apps.StoreConfig',
    'task.apps.TaskConfig',
    'todo.apps.TodoConfig',
    'warr.apps.WarrConfig',
    'logs.apps.LogsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
]

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/account/login/'
LOGOUT_REDIRECT_URL = '/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_cprofile_middleware.middleware.ProfilerMiddleware',
]

DJANGO_CPROFILE_MIDDLEWARE_REQUIRE_STAFF = False # Profiling in Django

ROOT_URLCONF = 'rusel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'rusel/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rusel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DB_ENGINE = os.environ.get('DJANGO_DB_ENGINE' + ENV + DB, 'sqlite3')
DB_NAME = os.environ.get('DJANGO_DB_NAME' + ENV + DB, 'db.sqlite3')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.' + DB_ENGINE,
    }
}

if DB_ENGINE == 'sqlite3':
    DATABASES['default']['NAME'] = os.path.join(BASE_DIR, DB_NAME)
else:
    DATABASES['default']['NAME'] = DB_NAME
    DATABASES['default']['USER'] = os.environ.get('DJANGO_DB_USER', 'db_user')
    DATABASES['default']['PASSWORD'] = os.environ.get('DJANGO_DB_PWRD', 'db_password')
    DATABASES['default']['HOST'] = HOST


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
TIME_ZONE = os.environ.get('DJANGO_TIME_ZONE')
USE_I18N = True
USE_L10N = True
USE_TZ = False
USE_THOUSAND_SEPARATOR = True
LOCALE_PATHS = ( os.path.join(BASE_DIR, 'locale'), os.path.join(BASE_DIR, 'rusel\\locale') )
STATICFILES_DIRS = [os.path.join(BASE_DIR, os.path.join(BASE_DIR, os.environ.get('DJANGO_STATIC_ROOT' + ENV, '/static/'))),]
MEDIA_ROOT = os.path.join(BASE_DIR, os.environ.get('DJANGO_MEDIA_ROOT', '/media/'))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

SECURE_SSL_REDIRECT = (os.environ.get('DJANGO_SSL_REDIRECT', '1') == '1')

SERVER_EMAIL = os.environ.get('DJANGO_SERVER_EMAIL')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}
